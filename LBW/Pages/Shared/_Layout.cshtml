<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Labware</title>
    <link href="~/favicon.ico" rel="shortcut icon" type="image/x-icon" />

    @* Uncomment to use the HtmlEditor control *@
    @* <script src="https://unpkg.com/devextreme-quill@22_1/dist/dx-quill.min.js"></script> *@

    <link rel="stylesheet" href="~/css/vendor.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/Site.css" />
    <script src="~/js/vendor.js" asp-append-version="true"></script>
</head>

<body class="dx-viewport">
    <div id="app-side-nav-outer-toolbar">
        <div class="layout-header">
        

            @(Html.DevExtreme().Toolbar()

                .Items(items => {
                    items.Add()
                        .Widget(w => w
                            .Button()
                            .Icon("menu")
                            .OnClick("LBW.onMenuButtonClick")
                        )
                        .Location(ToolbarItemLocation.Before)
                        .CssClass("menu-button");
                    items.Add()
                        .Html("<img src='/img/BARRICK LOGO.png' alt='BarrickLogo' style='height: 2rem;'>")
                        .Location(ToolbarItemLocation.Before)
                        .CssClass("header-title");
                }) 
            )
        </div>
        <div class="layout-body layout-body-hidden">
            @(Html.DevExtreme().Drawer()
                .ID("layout-drawer")
                .Position(DrawerPosition.Left)
                .Opened(new JS("LBW.restoreDrawerOpened()"))
                .Content(@<text>
                    <div id="layout-drawer-scrollview" class="with-footer">
                        <div class="content">
                            @RenderBody()
                        </div>
                        <div class="content-block">
                            <div class="content-footer">
                                <div id="footer">
                                    Copyright (c) 2024 Barrick Labware
                                    <br />
                                    <br />
                                <div style="display: flex; align-items: center;">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-info-circle" width="20" height="20" viewBox="0 0 24 24" stroke-width="1.5" stroke="#A79A66" fill="none" stroke-linecap="round" stroke-linejoin="round">
                                        <path stroke="none" d="M0 0h24v24H0z" fill="none" />
                                        <path d="M3 12a9 9 0 1 0 18 0a9 9 0 0 0 -18 0" />
                                        <path d="M12 9h.01" />
                                        <path d="M11 12h1v4h1" />
                                    </svg>
                                    <a href="./pdf/Manual de Vistas.pdf" style="margin-left: 10px; color: #A79A66; text-decoration: none;">Ayuda</a>
                                </div>

                                </div>
                            </div>
                        </div>
                    </div>
                </text>)
                .Template(new TemplateName("navigation-menu"))
            )
        </div>
    </div>


        @using (Html.DevExtreme().NamedTemplate("navigation-menu"))
        {
            <div class="menu-container dx-swatch-additional">
                @functions {
                string GetUrl(string pageName) => Url.Page(pageName);
                string GetCurrentUrl() => Url.Page(ViewContext.RouteData.Values["page"].ToString());
                bool IsCurrentUrl(string pageName) => GetUrl(pageName) == GetCurrentUrl();
            }

            @(Html.DevExtreme().TreeView()
                    .Items(items =>
                    {
                        items.Add()
                        .Text("Bienvenido")
                        .Icon("home")
                        .Option("path", GetUrl("/Bienvenido"))
                        .Selected(IsCurrentUrl("/Bienvenido"));

                        items.Add()
                        .Text("Gestión de Muestras")
                        .Icon("<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"icon icon-tabler icon-tabler-file-settings\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"#A79A66\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M12 14m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0\" /><path d=\"M12 10.5v1.5\" /><path d=\"M12 16v1.5\" /><path d=\"M15.031 12.25l-1.299 .75\" /><path d=\"M10.268 15l-1.3 .75\" /><path d=\"M15 15.803l-1.285 -.773\" /><path d=\"M10.285 12.97l-1.285 -.773\" /><path d=\"M14 3v4a1 1 0 0 0 1 1h4\" /><path d=\"M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z\" /></svg>")
                        .Items(subItems =>
                        {
                            subItems.Add()
                        
                        .Icon("<svg xmlns='http://www.w3.org/2000/svg' class='icon icon-tabler icon-tabler-test-pipe-2' width='24' height='24' viewBox='0 0 24 24' stroke-width='1.5' stroke='#A79A66' fill='none' stroke-linecap='round' stroke-linejoin='round'><path stroke='none' d='M0 0h24v24H0z' fill='none'/><path d='M15 3v15a3 3 0 0 1 -6 0v-15' /><path d='M9 12h6' /><path d='M8 3h8' /></svg>")
                        .Html("<span style='font-weight: bold; color: #A79A66;'>Ingreso de muestras</span>")
                        .Option("path", GetUrl("/IngresoMuestras"))
                        .Selected(IsCurrentUrl("/IngresoMuestras"));

                            subItems.Add()
                    .Icon(@"<svg xmlns='http://www.w3.org/2000/svg' class='icon icon-tabler icon-tabler-test-pipe' width='24' height='24' viewBox='0 0 24 24' stroke-width='1.5' stroke='#A79A66' fill='none' stroke-linecap='round' stroke-linejoin='round'>
                            <path stroke='none' d='M0 0h24v24H0z' fill='none' />
                            <path d='M20 8.04l-12.122 12.124a2.857 2.857 0 1 1 -4.041 -4.04l12.122 -12.124' />
                            <path d='M7 13h8' />
                            <path d='M19 15l1.5 1.6a2 2 0 1 1 -3 0l1.5 -1.6z' />
                            <path d='M15 3l6 6' />
                            </svg>")
                        .Html("<span style='font-weight: bold; color: #A79A66;'>Recepción</span>")
                        .Option("path", GetUrl("/Recepcion"))
                        .Selected(IsCurrentUrl("/Recepcion"));

                       

                        });
                     
                      items.Add()
                        .Text("Gestión de Resultados")
                    .Icon(@"<svg xmlns='http://www.w3.org/2000/svg' class='icon icon-tabler icon-tabler-report-analytics' width='24' height='24' viewBox='0 0 24 24' stroke-width='1.5' stroke='#A79A66' fill='none' stroke-linecap='round' stroke-linejoin='round'>
                            <path stroke='none' d='M0 0h24v24H0z' fill='none'/>
                            <path d='M9 5h-2a2 2 0 0 0 -2 2v12a2 2 0 0 0 2 2h10a2 2 0 0 0 2 -2v-12a2 2 0 0 0 -2 -2h-2' />
                            <path d='M9 3m0 2a2 2 0 0 1 2 -2h2a2 2 0 0 1 2 2v0a2 2 0 0 1 -2 2h-2a2 2 0 0 1 -2 -2z' />
                            <path d='M9 17v-5' />
                            <path d='M12 17v-1' />
                            <path d='M15 17v-3' />
                            </svg>")
                        .Items(subItems =>
                        {
                        subItems.Add()
                        .Icon(@"<svg xmlns='http://www.w3.org/2000/svg' class='icon icon-tabler icon-tabler-file-analytics' width='24' height='24' viewBox='0 0 24 24' stroke-width='1.5' stroke='#A79A66' fill='none' stroke-linecap='round' stroke-linejoin='round'>
                            <path stroke='none' d='M0 0h24v24H0z' fill='none' />
                            <path d='M14 3v4a1 1 0 0 0 1 1h4' />
                            <path d='M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z' />
                            <path d='M9 17l0 -5' />
                            <path d='M12 17l0 -1' />
                            <path d='M15 17l0 -3' />
                            </svg>")
                        .Html("<span style='font-weight: bold; color: #A79A66;'>Análisis/Resultados</span>")
                        .Option("path", GetUrl("/Analisis"))
                        .Selected(IsCurrentUrl("/Analisis"));


            

                            subItems.Add()
                            .Icon(@"<svg xmlns='http://www.w3.org/2000/svg' class='icon icon-tabler icon-tabler-file-like' width='24' height='24' viewBox='0 0 24 24' stroke-width='1.5' stroke='#A79A66' fill='none' stroke-linecap='round' stroke-linejoin='round'>
                            <path stroke='none' d='M0 0h24v24H0z' fill='none'/>
                            <path d='M3 16m0 1a1 1 0 0 1 1 -1h1a1 1 0 0 1 1 1v3a1 1 0 0 1 -1 1h-1a1 1 0 0 1 -1 -1z' />
                            <path d='M6 20a1 1 0 0 0 1 1h3.756a1 1 0 0 0 .958 -.713l1.2 -3c.09 -.303 .133 -.63 -.056 -.884c-.188 -.254 -.542 -.403 -.858 -.403h-2v-2.467a1.1 1.1 0 0 0 -2.015 -.61l-1.985 3.077v4z' />
                            <path d='M14 3v4a1 1 0 0 0 1 1h4' />
                            <path d='M5 12.1v-7.1a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2h-2.3' />
                            </svg>")
                        .Html("<span style='font-weight: bold; color: #A79A66;'>Autorizar/Resultados</span>")
                        .Option("path", GetUrl("/Autorizar"))
                        .Selected(IsCurrentUrl("/Autorizar"));

                       


                        });

                    items.Add()
                    .Text("Reporte al Cliente")
                    .Icon(@"<svg xmlns='http://www.w3.org/2000/svg' class='icon icon-tabler icon-tabler-file-like' width='24' height='24' viewBox='0 0 24 24' stroke-width='1.5' stroke='#A79A66' fill='none' stroke-linecap='round' stroke-linejoin='round'>
                        <path stroke='none' d='M0 0h24v24H0z' fill='none'/>
                        <path d='M3 16m0 1a1 1 0 0 1 1 -1h1a1 1 0 0 1 1 1v3a1 1 0 0 1 -1 1h-1a1 1 0 0 1 -1 -1z' />
                        <path d='M6 20a1 1 0 0 0 1 1h3.756a1 1 0 0 0 .958 -.713l1.2 -3c.09 -.303 .133 -.63 -.056 -.884c-.188 -.254 -.542 -.403 -.858 -.403h-2v-2.467a1.1 1.1 0 0 0 -2.015 -.61l-1.985 3.077v4z' />
                        <path d='M14 3v4a1 1 0 0 0 1 1h4' />
                        <path d='M5 12.1v-7.1a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2h-2.3' />
                        </svg>")
                    .Option("path", GetUrl("/ReporteCliente"))
                    .Selected(IsCurrentUrl("/ReporteCliente"));


                    
                    
                    })


                    .ExpandEvent(TreeViewExpandEvent.Click)
                    .SelectionMode(NavSelectionMode.Single)
                    .SelectedExpr("selected")
                    .FocusStateEnabled(false)
                    .OnItemClick("LBW.onTreeViewItemClick")
                    )
            </div>
        }

    


    <script>

        var LBW = (function() {

            var DRAWER_OPENED_KEY = "LBW-drawer-opened";

            var breakpoints = {
                xSmallMedia: window.matchMedia("(max-width: 599.99px)"),
                smallMedia: window.matchMedia("(min-width: 600px) and (max-width: 959.99px)"),
                mediumMedia: window.matchMedia("(min-width: 960px) and (max-width: 1279.99px)"),
                largeMedia: window.matchMedia("(min-width: 1280px)")
            };

            function getDrawer() {
                return $("#layout-drawer").dxDrawer("instance");
            }

            function restoreDrawerOpened() {
                var isLarge = breakpoints.largeMedia.matches;
                if(!isLarge)
                    return false;

                var state = sessionStorage.getItem(DRAWER_OPENED_KEY);
                if(state === null)
                    return isLarge;

                return state === "true";
            }

            function saveDrawerOpened() {
                sessionStorage.setItem(DRAWER_OPENED_KEY, getDrawer().option("opened"));
            }

            function updateDrawer() {
                var isXSmall = breakpoints.xSmallMedia.matches,
                    isLarge = breakpoints.largeMedia.matches;

                getDrawer().option({
                    openedStateMode: isLarge ? "shrink" : "overlap",
                    revealMode: isXSmall ? "slide" : "expand",
                    minSize: isXSmall ? 0 : 60,
                    shading: !isLarge,
                });
            }

            function init() {
                $("#layout-drawer-scrollview").dxScrollView({ direction: "vertical" });

                $.each(breakpoints, function(_, size) {
                    size.addListener(function(e) {
                        if(e.matches)
                            updateDrawer();
                    });
                });

                updateDrawer();

                $('.layout-body').removeClass('layout-body-hidden');
            }

            function navigate(url, delay) {
                if(url)
                    setTimeout(function() { location.href = url }, delay);
            }

            function onMenuButtonClick() {
                getDrawer().toggle();
                saveDrawerOpened();
            }

            function onTreeViewItemClick(e) {
                var drawer = getDrawer();
                var savedOpened = restoreDrawerOpened();
                var actualOpened = drawer.option("opened");

                if(!actualOpened) {
                    drawer.show();
                } else {
                    var willHide = !savedOpened || !breakpoints.largeMedia.matches;
                    var willNavigate = !e.itemData.selected;

                    if(willHide)
                        drawer.hide();

                    if(willNavigate)
                        navigate(e.itemData.path, willHide ? 400 : 0);
                }
            }

            return {
                init: init,
                restoreDrawerOpened: restoreDrawerOpened,
                onMenuButtonClick: onMenuButtonClick,
                onTreeViewItemClick: onTreeViewItemClick
            };
        })();

        document.addEventListener("DOMContentLoaded", function documentReady() {
            this.removeEventListener("DOMContentLoaded", documentReady);
            LBW.init();
        });
    </script>
</body>

</html>
